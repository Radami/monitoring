networks:
    monitor-net:
        driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
    # node-exporter:
    #     image: prom/node-exporter:latest
    #     container_name: node-exporter
    #     restart: unless-stopped
    #     volumes:
    #         - /proc:/host/proc:ro
    #         - /sys:/host/sys:ro
    #         - /:/rootfs:ro
    #         - /:/host:ro,rslave
    #     command:
    #         - '--path.procfs=/host/proc'
    #         - '--path.rootfs=/host'
    #         - '--path.sysfs=/host/sys'
    #         - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    #     ports:
    #         - 9100:9100
    #     network_mode: host
    #     pid: host
        #networks:
        #    - monitor-net
            
    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        restart: unless-stopped
        volumes:
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
            - prometheus_data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--web.enable-lifecycle'
        ports:
            - 9090:9090
        #network_mode: host
        networks:
            - monitor-net
        extra_hosts:
            - "host.docker.internal:host-gateway"

    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        volumes:
            - ./grafana/grafana.ini:/etc/grafana/grafana.ini
            - ./grafana/provisioning:/etc/grafana/provisioning
            - grafana_data:/grafana
        restart: unless-stopped
        ports:
            - 3000:3000
        #network_mode: bridge
        links:
            - prometheus
        networks:
            - monitor-net


